package main

import "fmt"

func main() {
	/*
	闭包：一个函数捕获了和他在同一个作用域的其他变量和常量
		这就意味着，当闭包被调用的时候，不管在程序什么地方调用，闭包能够使用这些常量或者变量，
		它不关心这些捕获了的变量和常量是否已经超出了作用域，所以只要闭包还在使用它，这些变量和常量就会存在

	闭包是以引用的方式捕获外部变量，内部改变，外部也会改变


	闭包是通过匿名函数实现的
	 */
	a := 10
	b := "go"
	 func(){
	 	// 里面对外部变量进行了修改
	 	a = 66
	 	b = "hello go"
	 	fmt.Printf("%d,%s\n",a,b)
	 }()
	fmt.Printf("%d,%s\n",a,b)

}
