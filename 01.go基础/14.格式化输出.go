package main

import "fmt"

func main() {
	/*
	格式化输出：
		1.%%：一个%字面量
		2.%b:一个二进制整数值，或者是一个用科学计数法表示的指数为2的浮点数
		3.%c：字符型，可以把输入的数字按照ASCII码相应转换为对应的字符
		4.%d:一个十进制数值，基数为10
		5.%e:以科学计数法e表示的浮点数或者复数值
		6.%E：以科学计数法E表示的浮点数或者复数值
		7.%f：以标准计数法表示的浮点数或者复数值
		8.%g：以%e或者%f表示的浮点数或者复数，任何一个都为最为紧凑的方式输出
		9.%G:以%E或者%f表示的浮点数或者复数，任何一个都以最为紧凑的方式输出
		10.%o：一个以八进制标示的数字，基数为8
		11.%p：以十六进制表示的值的地址，前缀为0x，字母使用小写的a-f表示
		12.%q：使用go语言语法以及必须时使用转义，以双引号括起来的字符串或者字节切片[]byte,
				或者是以单引号括起来的数字
		13.%s:字符串。输出字符串中的字符直至字符串中的空字符（字符串以'\0'结尾，这个'\0'即空字符）
		14.%t：以true或者false输出的布尔值
		15.v%：自动匹配类型输出，适用于大多数类型
	 */

	a := "hello"
	// 打印类型:%T
	fmt.Printf("%T\n",a)
	// 字符串格式输出:%s
	fmt.Printf("%s\n",a)
	b := 123
	// 整型格式:%d
	fmt.Printf("%d\n",b)

	c := 'c'
	// 字符格式：%c
	fmt.Printf("%c\n",c)

	d := 1.21323
	// 浮点型格式：%f,%.2f
	fmt.Printf("%f\n",d)
	fmt.Printf("%.2f\n",d)

	//

}
